// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.example.rapid.web.ui;

import com.example.rapid.domain.Project;
import com.example.rapid.web.EntityProviderUtil;
import com.example.rapid.web.EntityTableColumnGenerator;
import com.example.rapid.web.ui.ProjectView;
import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import java.util.List;

privileged aspect ProjectView_Roo_VaadinEntityView {
    
    private JPAContainer<Project> ProjectView.tableContainer;
    
    public String ProjectView.getEntityName() {
        return "Project";
    }
    
    public Class<Project> ProjectView.getEntityClass() {
        return Project.class;
    }
    
    public boolean ProjectView.isCreateAllowed() {
        return true;
    }
    
    public boolean ProjectView.isUpdateAllowed() {
        return true;
    }
    
    public boolean ProjectView.isDeleteAllowed() {
        return true;
    }
    
    public List<Project> ProjectView.listEntities() {
        List<Project> list = Project.findAllProjects();
        return list;
    }
    
    public Project ProjectView.saveEntity(Project entity) {
        if (entity == null) {
            return null;
        }
        return (Project) entity.merge();
    }
    
    public void ProjectView.deleteEntity(Project entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean ProjectView.isNewEntity(Project entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String ProjectView.getIdProperty() {
        return "id";
    }
    
    public String ProjectView.getVersionProperty() {
        return "version";
    }
    
    public Project ProjectView.createEntityInstance() {
        return new Project();
    }
    
    public JPAContainer<Project> ProjectView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<Project> container = new JPAContainer<Project>(Project.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(Project.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item ProjectView.getItemForEntity(Project entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public Project ProjectView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof Project) {
            return (Project) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object ProjectView.getIdForEntity(Project entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void ProjectView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}

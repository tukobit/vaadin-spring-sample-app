// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.example.rapid.web.ui;

import com.example.rapid.domain.RapidUser;
import com.example.rapid.web.EntityProviderUtil;
import com.example.rapid.web.EntityTableColumnGenerator;
import com.example.rapid.web.ui.RapidUserView;
import com.vaadin.addon.jpacontainer.EntityItem;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.data.Item;
import com.vaadin.ui.Table;
import java.util.List;

privileged aspect RapidUserView_Roo_VaadinEntityView {
    
    private JPAContainer<RapidUser> RapidUserView.tableContainer;
    
    public String RapidUserView.getEntityName() {
        return "Rapid User";
    }
    
    public Class<RapidUser> RapidUserView.getEntityClass() {
        return RapidUser.class;
    }
    
    public boolean RapidUserView.isCreateAllowed() {
        return true;
    }
    
    public boolean RapidUserView.isUpdateAllowed() {
        return true;
    }
    
    public boolean RapidUserView.isDeleteAllowed() {
        return true;
    }
    
    public List<RapidUser> RapidUserView.listEntities() {
        List<RapidUser> list = RapidUser.findAllRapidUsers();
        return list;
    }
    
    public RapidUser RapidUserView.saveEntity(RapidUser entity) {
        if (entity == null) {
            return null;
        }
        return (RapidUser) entity.merge();
    }
    
    public void RapidUserView.deleteEntity(RapidUser entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean RapidUserView.isNewEntity(RapidUser entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String RapidUserView.getIdProperty() {
        return "id";
    }
    
    public String RapidUserView.getVersionProperty() {
        return "version";
    }
    
    public RapidUser RapidUserView.createEntityInstance() {
        return new RapidUser();
    }
    
    public JPAContainer<RapidUser> RapidUserView.getTableContainer() {
        if (tableContainer == null) {
            JPAContainer<RapidUser> container = new JPAContainer<RapidUser>(RapidUser.class);
            container.setEntityProvider(EntityProviderUtil.get().getEntityProvider(RapidUser.class));
            tableContainer = container;
        }
        return tableContainer;
    }
    
    public Item RapidUserView.getItemForEntity(RapidUser entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = tableContainer.createEntityItem(entity);
        }
        return item;
    }
    
    public RapidUser RapidUserView.getEntityForItem(Item item) {
        if (item instanceof EntityItem && ((EntityItem) item).getEntity() instanceof RapidUser) {
            return (RapidUser) ((EntityItem) item).getEntity();
        } else {
            return null;
        }
    }
    
    public Object RapidUserView.getIdForEntity(RapidUser entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void RapidUserView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
}
